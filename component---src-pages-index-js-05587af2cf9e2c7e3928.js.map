{"version":3,"sources":["webpack:///./src/components/ProjectCard.jsx","webpack:///./src/images/teaching.svg","webpack:///./src/components/About.jsx","webpack:///./src/pages/index.js","webpack:///./src/components/_ui/Button.jsx"],"names":["ProjectCardContainer","Link","dimensions","maxwidthTablet","maxwidthMobile","props","secondaryColor","ProjectCardContent","ProjectCardCategory","colors","grey600","ProjectCardTitle","ProjectCardBlurb","ProjectCardAction","ProjectCardImageContainer","ProjectCard","category","title","description","thumbnail","color","uid","to","className","text","RichText","render","style","background","src","url","alt","module","exports","AboutContainer","AboutLinkContainer","AboutLink","primary_link","AboutBio","About","bio","socialLinks","map","social","i","key","href","about_link","spans","data","target","rel","Hero","logo_gradient_first_light","Section","RenderBody","home","meta","projects","titleTemplate","name","content","property","author","concat","hero_title","teachingBackgroundImage","hero_button_link","Button","hero_button_text","about_title","about_bio","about_links","query","doc","prismic","allHomepages","edges","slice","pop","allProjects","site","siteMetadata","Layout","node","ButtonContainer","button","blue200","blue600","blue300","this","children","onClick","Component"],"mappings":"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","file":"component---src-pages-index-js-05587af2cf9e2c7e3928.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { RichText } from \"prismic-reactjs\";\nimport styled from \"@emotion/styled\";\nimport dimensions from \"styles/dimensions\";\nimport colors from \"styles/colors\";\nimport PropTypes from \"prop-types\";\n\nconst ProjectCardContainer = styled(Link)`\n    display: grid;\n    grid-template-columns: 4fr 7fr;\n    box-shadow: 0px 9px 24px rgba(0, 0, 0, 0.06);\n    margin-bottom: 4em;\n    min-height: 565px;\n    transition: all 150ms ease-in-out;\n    text-decoration: none;\n    color: currentColor;\n\n    @media(max-width:950px) {\n        grid-template-columns: 4.5fr 7fr;\n    }\n\n    @media(max-width:${dimensions.maxwidthTablet}px) {\n        grid-template-columns: 1fr;\n    }\n\n    @media(max-width:${dimensions.maxwidthMobile}px) {\n        margin-bottom: 2em;\n    }\n\n    &:hover {\n        box-shadow: 0px 9px 24px rgba(0, 0, 0, 0.1);\n        transition: all 150ms ease-in-out;\n\n        .ProjectCardAction {\n            color: ${props => props.secondaryColor};\n            transition: all 150ms ease-in-out;\n\n            span {\n                transform: translateX(0px);\n                opacity: 1;\n                transition: transform 150ms ease-in-out;\n            }\n        }\n\n        .ProjectCardContent::before {\n            opacity: 0.02;\n            transition: all 150ms ease-in-out;\n        }\n\n        .ProjectCardImageContainer::before {\n            opacity: 0.2;\n            transition: all 150ms ease-in-out;\n        }\n    }\n`\n\nconst ProjectCardContent = styled(\"div\")`\n    background: white;\n    padding: 4em 3em 2.25em 3em;\n    position: relative;\n\n    &:before {\n        position: absolute;\n        content: \"\";\n        width: 100%;\n        height: 100%;\n        left: 0;\n        top: 0;\n        background: ${props => props.secondaryColor};\n        mix-blend-mode: multiply;\n        opacity: 0;\n        transition: all 150ms ease-in-out;\n    }\n\n    @media(max-width:950px) {\n        padding: 3.25em 2.5em 2em 2.5em;\n    }\n\n    @media(max-width:${dimensions.maxwidthTablet}px) {\n        grid-row: 2;\n    }\n`\n\nconst ProjectCardCategory = styled(\"h6\")`\n    font-weight: 600;\n    color: ${colors.grey600};\n`\n\nconst ProjectCardTitle = styled(\"h3\")`\n    margin-bottom: 0.5em;\n    margin-top: 0.5em;\n`\n\nconst ProjectCardBlurb = styled(\"div\")`\n    margin-bottom: 0.5em;\n    margin-top: 0.5em;\n    margin-bottom: 5em;\n\n    @media(max-width:${dimensions.maxwidthTablet}px) {\n        margin-bottom: 2.5em;\n    }\n`\n\nconst ProjectCardAction = styled(\"div\")`\n    font-weight: 600;\n    text-decoration: none;\n    color: currentColor;\n    transition: all 150ms ease-in-out;\n    bottom: 45px;\n    position: absolute;\n\n    span {\n        margin-left: 1em;\n        transform: translateX(-8px);\n        display: inline-block;\n        transition: transform 400ms ease-in-out;\n    }\n`\n\nconst ProjectCardImageContainer = styled(\"div\")`\n    display: flex;\n    justify-content: center;\n    align-items: flex-end;\n    overflow: hidden;\n    position: relative;\n\n    @media(max-width:${dimensions.maxwidthTablet}px) {\n        padding-top: 3em;\n        max-height: 200px;\n        flex-direction: column;\n        align-items: center;\n        justify-content: flex-start;\n    }\n\n    &:before {\n        position: absolute;\n        content: \"\";\n        width: 100%;\n        height: 100%;\n        left: 0;\n        top: 0;\n        background: ${props => props.secondaryColor};\n        mix-blend-mode: multiply;\n        opacity: 0;\n        transition: all 150ms ease-in-out;\n    }\n\n    img {\n        height: 100%;\n        width: 100%;\n\n        @media(max-width:${dimensions.maxwidthTablet}px) {\n            max-width: 300px;\n        }\n    }\n`\n\nconst ProjectCard = ({ category, title, description, thumbnail, uid, color, secondaryColor}) => (\n    <ProjectCardContainer secondaryColor={secondaryColor} to={`/publications`}>\n        <ProjectCardContent secondaryColor={secondaryColor} className=\"ProjectCardContent\">\n            <ProjectCardCategory>\n                {category[0].text}\n            </ProjectCardCategory>\n            <ProjectCardTitle>\n                {title[0].text}\n            </ProjectCardTitle>\n            <ProjectCardBlurb>\n                {RichText.render(description)}\n            </ProjectCardBlurb>\n            <ProjectCardAction className=\"ProjectCardAction\">\n                Details <span>&#8594;</span>\n            </ProjectCardAction>\n        </ProjectCardContent>\n        <ProjectCardImageContainer secondaryColor={secondaryColor} style={{background: color}} className=\"ProjectCardImageContainer\">\n            <img src={thumbnail.url} alt={title[0].text}/>\n        </ProjectCardImageContainer>\n    </ProjectCardContainer>\n)\n\nexport default ProjectCard;\n\nProjectCard.propTypes = {\n    category: PropTypes.array.isRequired,\n    thumbnail: PropTypes.object.isRequired,\n    title: PropTypes.array.isRequired,\n    description: PropTypes.array.isRequired,\n    uid: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n    secondaryColor: PropTypes.string.isRequired\n}\n","module.exports = __webpack_public_path__ + \"static/teaching-ca1e95986530d17be4570d29c9cdbc76.svg\";","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport dimensions from \"styles/dimensions\";\nimport { RichText } from \"prismic-reactjs\";\nimport PropTypes from \"prop-types\";\nimport colors from \"styles/colors\";\n\nconst AboutContainer = styled(\"div\")`\n    padding-top: 1em;\n    display: grid;\n    grid-template-columns: 15em 1fr;\n    grid-gap: 3em;\n\n    @media(max-width: ${dimensions.maxwidthTablet}px) {\n        grid-template-columns: 1fr 3fr 1fr;\n    }\n\n    @media(max-width: ${dimensions.maxwidthMobile}px) {\n        grid-template-columns: 7em 1fr;\n        grid-template-rows: 3em 1fr;\n        grid-gap: 2em;\n    }\n`\n\nconst AboutLinkContainer = styled(\"div\")`\n    padding-top: 1em;\n    padding-bottom: 3em;\n    display: flex;\n    flex-direction: column;\n\n    @media(max-width: ${dimensions.maxwidthMobile}px) {\n        grid-row: 2;\n    }\n`\n\nconst AboutLink = styled(\"a\")`\n    margin-bottom: 1.5em;\n    font-weight: 600;\n    line-height: 1.9;\n    text-decoration: none;\n    color: currentColor;\n\n    span {\n        margin-left: 1em;\n        transform: translateX(-8px);\n        display: inline-block;\n        opacity: 0;\n        transition: all 400ms ease-in-out;\n    }\n\n    &:hover {\n        color: ${colors.primary_link};\n        span {\n            transform: translateX(0px);\n            opacity: 1;\n            transition: all 150ms ease-in-out;\n        }\n    }\n`\n\nconst AboutBio = styled(\"div\")`\n    padding-bottom: 3em;\n    \n    ul {\n      li {\n        margin-bottom: 9px;\n        line-height: 27px;\n      }\n    }\n    \n    p {\n      a {\n        color: ${colors.primary_link};\n      }\n    }\n\n    @media(max-width: ${dimensions.maxwidthMobile}px) {\n        grid-row: 2;\n    }\n`\n\n\nconst About = ({ bio, socialLinks }) => (\n    <AboutContainer>\n        <AboutLinkContainer>\n            {socialLinks.map((social, i) => (\n                <AboutLink\n                    key={i}\n                    href={social.about_link[0].spans[0].data.url}\n                    target=\"_blank\" rel=\"noopener noreferrer\">\n                    {social.about_link[0].text}\n                    <span>&#8594;</span>\n                </AboutLink>\n            ))}\n        </AboutLinkContainer>\n        <AboutBio>\n            {RichText.render(bio)}\n        </AboutBio>\n    </AboutContainer>\n)\n\nexport default About;\n\nAbout.propTypes = {\n    bio: PropTypes.array.isRequired,\n    socialLinks: PropTypes.array.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { RichText } from \"prismic-reactjs\";\nimport { graphql, Link } from \"gatsby\";\nimport styled from \"@emotion/styled\";\nimport colors from \"styles/colors\";\nimport dimensions from \"styles/dimensions\";\nimport Button from \"components/_ui/Button\";\nimport About from \"components/About\";\nimport Layout from \"components/Layout\";\nimport ProjectCard from \"components/ProjectCard\";\nimport teachingBackgroundImage from \"images/teaching.svg\";\n\nconst Hero = styled(\"div\")`\n    padding-bottom: 3em;\n    margin-bottom: 6em;\n    \n    .contentwrapper {\n      height: 395px;\n      h1 {\n        float: left;\n        max-width: calc(100% - 490px);\n      }\n      \n      .contentprod {\n        float: right;\n        width: 490px;\n        margin-top: -30px;\n      }\n    }\n\n    @media(max-width:${dimensions.maxwidthMobile}px) {\n       margin-bottom: 3em;\n    }\n\n    h1 {\n        margin-bottom: 1em;\n\n        a {\n            text-decoration: none;\n            transition: all 100ms ease-in-out;\n\n            &:nth-of-type(1) { color: #721F80; }\n            &:nth-of-type(2) { color: #5B479D; }\n            &:nth-of-type(3) { color: #4163A7; }\n\n            &:hover {\n                cursor: pointer;\n                transition: all 100ms ease-in-out;\n\n                &:nth-of-type(1) { color: #44134D;    background-color: ${colors.logo_gradient_first_light};}\n                &:nth-of-type(2) { color: #223257;  background-color: #9E91CD;}\n                &:nth-of-type(3) { color: #223257;  background-color: #8CA5D2;}\n\n            }\n        }\n    }\n`\n\nconst Section = styled(\"div\")`\n    margin-bottom: 10em;\n    display: flex;\n    flex-direction: column;\n\n    @media(max-width:${dimensions.maxwidthTablet}px) {\n        margin-bottom: 4em;\n    }\n\n    &:last-of-type {\n        margin-bottom: 0;\n    }\n`\n\nconst WorkAction = styled(Link)`\n    font-weight: 600;\n    text-decoration: none;\n    color: currentColor;\n    transition: all 150ms ease-in-out;\n    margin-left: auto;\n\n    @media(max-width:${dimensions.maxwidthTablet}px) {\n       margin: 0 auto;\n    }\n\n    span {\n        margin-left: 1em;\n        transform: translateX(-8px);\n        display: inline-block;\n        transition: transform 400ms ease-in-out;\n    }\n\n    &:hover {\n        color: ${colors.primary_link};\n        transition: all 150ms ease-in-out;\n\n        span {\n            transform: translateX(0px);\n            opacity: 1;\n            transition: transform 150ms ease-in-out;\n        }\n    }\n`\n\nconst RenderBody = ({ home, projects, meta }) => (\n    <>\n        <Helmet\n            title={\"Inclusive Creativity\"}\n            titleTemplate={`%s | ${meta.title}`}\n            meta={[\n                {\n                    name: `description`,\n                    content: meta.description,\n                },\n                {\n                    property: `og:title`,\n                    content: meta.title,\n                },\n                {\n                    property: `og:description`,\n                    content: meta.description,\n                },\n                {\n                    property: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:card`,\n                    content: `summary`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: meta.author,\n                },\n                {\n                    name: `twitter:title`,\n                    content: meta.title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: meta.description,\n                },\n            ].concat(meta)}\n        />\n        <Hero>\n            <>\n                <div className=\"contentwrapper\">\n                  {RichText.render(home.hero_title)}\n                  <div className=\"contentprod\">\n                    <img src={teachingBackgroundImage} alt=\"Two people working on designing a application\" />\n                  </div>\n                </div>\n            </>\n            <a href={home.hero_button_link.url}\n               target=\"_blank\" rel=\"noopener noreferrer\">\n                <Button>\n                    {RichText.render(home.hero_button_text)}\n                </Button>\n            </a>\n        </Hero>\n        <Section>\n            {RichText.render(home.about_title)}\n            <About\n                bio={home.about_bio}\n                socialLinks={home.about_links}\n            />\n        </Section>\n    </>\n);\n\nexport default ({ data }) => {\n    //Required check for no data being returned\n    const doc = data.prismic.allHomepages.edges.slice(0, 1).pop();\n    const projects = data.prismic.allProjects.edges;\n    const meta = data.site.siteMetadata;\n\n    if (!doc || !projects) return null;\n\n    return (\n        <Layout>\n            <RenderBody home={doc.node} projects={projects} meta={meta}/>\n        </Layout>\n    )\n}\n\nRenderBody.propTypes = {\n    home: PropTypes.object.isRequired,\n    projects: PropTypes.array.isRequired,\n    meta: PropTypes.object.isRequired,\n};\n\nexport const query = graphql`\n    {\n        prismic {\n            allHomepages {\n                edges {\n                    node {\n                        hero_title\n                        hero_button_text\n                        hero_button_link {\n                            ... on PRISMIC__ExternalLink {\n                                _linkType\n                                url\n                            }\n                        }\n                        content\n                        about_title\n                        about_bio\n                        about_links {\n                            about_link\n                        }\n                    }\n                }\n            }\n            allProjects {\n                edges {\n                    node {\n                        project_title\n                        project_preview_description\n                        project_preview_thumbnail\n                        project_category\n                        project_post_date\n                        secondary_color\n                        primary_color\n                        _meta {\n                            uid\n                        }\n                    }\n                }\n            }\n        }\n        site {\n            siteMetadata {\n                title\n                description\n                author\n            }\n        }\n    }\n`\n","import React, { Component } from 'react';\nimport styled from \"@emotion/styled\";\nimport colors from \"styles/colors\";\nimport dimensions from \"styles/dimensions\";\n\nconst ButtonContainer = styled(\"button\")`\n    padding: 1em 2em;\n    background: ${colors.button};\n    font-weight: 600;\n    color: white;\n    outline: none;\n    border: none;\n    font-size: 1rem;\n    border-radius: 2px;\n    position: relative;\n    transition: background 100ms ease-in-out;\n\n    @media(max-width:${dimensions.maxwidthMobile}px) {\n        padding: 0.8em 1.8em;\n        font-size: 1em;\n    }\n\n    p {\n        margin: 0;\n    }\n\n    &:before {\n        content: \"\";\n        position: absolute;\n        left: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        background: linear-gradient(135deg, #721F80 0%, #223257 100%);\n        z-index: -1;\n    }\n\n    &:hover {\n        cursor: pointer;\n        background: transparent;\n        transition: background 100ms ease-in-out;\n    }\n\n    &.Button--secondary {\n        background: ${colors.blue200};\n        color: ${colors.blue600};\n        padding: 0.95em 1.8em;\n        font-size: 0.95rem;\n\n        &:hover {\n            background: ${colors.blue300};\n            transition: background 100ms ease-in-out;\n        }\n    }\n`\n\nclass Button extends Component {\n    render() {\n        const { children, ...props } = this.props;\n        return (\n            <ButtonContainer\n                onClick={this.props.onClick}\n                {...props}>\n                {this.props.children}\n            </ButtonContainer>\n        );\n    }\n}\n\nexport default Button;\n"],"sourceRoot":""}