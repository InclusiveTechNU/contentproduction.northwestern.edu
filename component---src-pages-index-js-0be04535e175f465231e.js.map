{"version":3,"sources":["webpack:///./src/images/teaching.svg","webpack:///./src/components/About.jsx","webpack:///./src/pages/index.js","webpack:///./src/components/_ui/Button.jsx"],"names":["module","exports","AboutContainer","AboutLinkContainer","AboutLink","colors","primary_link","AboutBio","About","bio","socialLinks","aria-label","map","social","i","key","href","about_link","spans","data","url","target","rel","text","RichText","render","Hero","dimensions","maxwidthMobile","logo_gradient_first_light","Section","maxwidthTablet","RenderBody","home","meta","projects","title","titleTemplate","name","content","description","property","author","concat","className","hero_title","src","teachingBackgroundImage","alt","role","hero_button_link","Button","hero_button_text","about_title","about_bio","about_links","query","doc","prismic","allHomepages","edges","slice","pop","allProjects","site","siteMetadata","Layout","node","ButtonContainer","button","blue200","blue600","blue300","this","props","children","onClick","Component"],"mappings":"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","file":"component---src-pages-index-js-0be04535e175f465231e.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/teaching-ca1e95986530d17be4570d29c9cdbc76.svg\";","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport dimensions from \"styles/dimensions\";\nimport { RichText } from \"prismic-reactjs\";\nimport PropTypes from \"prop-types\";\nimport colors from \"styles/colors\";\n\nconst AboutContainer = styled(\"div\")`\n    padding-top: 1em;\n    display: grid;\n    grid-template-columns: 15em 1fr;\n    grid-gap: 3em;\n\n    @media(max-width: 960px) {\n        grid-template-columns: none;\n        grid-gap: 0.2em;\n    }\n`\n\nconst AboutLinkContainer = styled(\"div\")`\n    padding-top: 1em;\n    padding-bottom: 3em;\n    display: flex;\n    flex-direction: column;\n    text-align: left;\n\n    @media(max-width: 960px) {\n        text-align: center;\n        padding-bottom: 0;\n    }\n`\n\nconst AboutLink = styled(\"a\")`\n    margin-bottom: 1.5em;\n    font-weight: 600;\n    line-height: 1.9;\n    text-decoration: none;\n    color: currentColor;\n\n    span {\n        margin-left: 1em;\n        transform: translateX(-8px);\n        display: inline-block;\n        opacity: 0;\n        transition: all 400ms ease-in-out;\n    }\n\n    &:hover {\n        color: ${colors.primary_link};\n        span {\n            transform: translateX(0px);\n            opacity: 1;\n            transition: all 150ms ease-in-out;\n        }\n    }\n`\n\nconst AboutBio = styled(\"div\")`\n    padding-bottom: 3em;\n    \n    ul {\n      li {\n        margin-bottom: 9px;\n        line-height: 27px;\n      }\n    }\n    \n    p {\n      a {\n        color: ${colors.primary_link};\n      }\n    }\n\n    @media(max-width: 960px) {\n        padding-top: 0;\n    }\n`\n\n\nconst About = ({ bio, socialLinks }) => (\n    <AboutContainer>\n        <AboutLinkContainer aria-label=\"links\">\n            {socialLinks.map((social, i) => (\n                <AboutLink\n                    key={i}\n                    href={social.about_link[0].spans[0].data.url}\n                    target=\"_blank\" rel=\"noopener noreferrer\">\n                    {social.about_link[0].text}\n                    <span>&#8594;</span>\n                </AboutLink>\n            ))}\n        </AboutLinkContainer>\n        <AboutBio aria-label=\"project info\">\n            {RichText.render(bio)}\n        </AboutBio>\n    </AboutContainer>\n)\n\nexport default About;\n\nAbout.propTypes = {\n    bio: PropTypes.array.isRequired,\n    socialLinks: PropTypes.array.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { RichText } from \"prismic-reactjs\";\nimport { graphql, Link } from \"gatsby\";\nimport styled from \"@emotion/styled\";\nimport colors from \"styles/colors\";\nimport dimensions from \"styles/dimensions\";\nimport Button from \"components/_ui/Button\";\nimport About from \"components/About\";\nimport Layout from \"components/Layout\";\nimport teachingBackgroundImage from \"images/teaching.svg\";\n\nconst Hero = styled(\"div\")`\n    padding-bottom: 3em;\n    margin-bottom: 6em;\n    \n    .contentwrapper {\n      height: 395px;\n      h1 {\n        float: left;\n        max-width: calc(100% - 490px);\n      }\n      \n      .contentprod {\n        float: right;\n        width: 490px;\n        margin-top: -30px;\n      }\n    }\n\n    position: relative;\n\n    .learn-more {\n        position: absolute;\n        left: 0;\n    }\n\n    @media(max-width: 1308px) {\n        .learn-more {\n            position: relative;\n            margin: 0 AUTO;\n            DISPLAY: BLOCK;\n            float: none;\n            width: fit-content;\n        }\n\n        .contentwrapper {\n            height: fit-content;\n            padding-bottom: 40px;\n            h1 {\n                margin: 0 auto;\n                display: block;\n                float: none;\n                width: 750px;\n                max-width: 750px;\n                text-align: center;\n            }\n            .contentprod {\n                display: none;\n            }\n\n        }\n    }\n\n    @media(max-width: 850px) {\n        .contentwrapper {\n            h1 {\n                width: 100%;\n                max-width: 100%;\n            }\n        }\n    }\n\n    @media(max-width:${dimensions.maxwidthMobile}px) {\n       margin-bottom: 3em;\n    }\n\n    h1 {\n        margin-bottom: 1em;\n\n        a {\n            text-decoration: none;\n            transition: all 100ms ease-in-out;\n\n            &:nth-of-type(1) { color: #721F80; }\n            &:nth-of-type(2) { color: #5B479D; }\n            &:nth-of-type(3) { color: #4163A7; }\n\n            &:hover {\n                cursor: pointer;\n                transition: all 100ms ease-in-out;\n\n                &:nth-of-type(1) { color: #44134D;    background-color: ${colors.logo_gradient_first_light};}\n                &:nth-of-type(2) { color: #223257;  background-color: #9E91CD;}\n                &:nth-of-type(3) { color: #223257;  background-color: #8CA5D2;}\n\n            }\n        }\n    }\n`\n\nconst Section = styled(\"div\")`\n    margin-bottom: 10em;\n    display: flex;\n    flex-direction: column;\n\n    @media(max-width:${dimensions.maxwidthTablet}px) {\n        margin-bottom: 4em;\n    }\n\n    &:last-of-type {\n        margin-bottom: 0;\n    }\n`\n\nconst WorkAction = styled(Link)`\n    font-weight: 600;\n    text-decoration: none;\n    color: currentColor;\n    transition: all 150ms ease-in-out;\n    margin-left: auto;\n\n    @media(max-width:${dimensions.maxwidthTablet}px) {\n       margin: 0 auto;\n    }\n\n    span {\n        margin-left: 1em;\n        transform: translateX(-8px);\n        display: inline-block;\n        transition: transform 400ms ease-in-out;\n    }\n\n    &:hover {\n        color: ${colors.primary_link};\n        transition: all 150ms ease-in-out;\n\n        span {\n            transform: translateX(0px);\n            opacity: 1;\n            transition: transform 150ms ease-in-out;\n        }\n    }\n`\n\nconst RenderBody = ({ home, projects, meta }) => (\n    <>\n        <Helmet\n            title={\"Inclusive Creativity\"}\n            titleTemplate={`%s | ${meta.title}`}\n            meta={[\n                {\n                    name: `description`,\n                    content: meta.description,\n                },\n                {\n                    property: `og:title`,\n                    content: meta.title,\n                },\n                {\n                    property: `og:description`,\n                    content: meta.description,\n                },\n                {\n                    property: `og:type`,\n                    content: `website`,\n                },\n                {\n                    name: `twitter:card`,\n                    content: `summary`,\n                },\n                {\n                    name: `twitter:creator`,\n                    content: meta.author,\n                },\n                {\n                    name: `twitter:title`,\n                    content: meta.title,\n                },\n                {\n                    name: `twitter:description`,\n                    content: meta.description,\n                },\n            ].concat(meta)}\n        />\n        <Hero>\n            <>\n                <div className=\"contentwrapper\">\n                  {RichText.render(home.hero_title)}\n                  <div className=\"contentprod\">\n                    <img src={teachingBackgroundImage} alt=\"\" role=\"presentation\" />\n                  </div>\n                </div>\n            </>\n            <a href={home.hero_button_link.url}\n               target=\"_blank\" rel=\"noopener noreferrer\"\n               className=\"learn-more\">\n                <Button>\n                    {RichText.render(home.hero_button_text)}\n                </Button>\n            </a>\n        </Hero>\n        <Section>\n            {RichText.render(home.about_title)}\n            <About\n                bio={home.about_bio}\n                socialLinks={home.about_links}\n            />\n        </Section>\n    </>\n);\n\nexport default ({ data }) => {\n    //Required check for no data being returned\n    const doc = data.prismic.allHomepages.edges.slice(0, 1).pop();\n    const projects = data.prismic.allProjects.edges;\n    const meta = data.site.siteMetadata;\n\n    if (!doc || !projects) return null;\n\n    return (\n        <Layout>\n            <RenderBody home={doc.node} projects={projects} meta={meta}/>\n        </Layout>\n    )\n}\n\nRenderBody.propTypes = {\n    home: PropTypes.object.isRequired,\n    projects: PropTypes.array.isRequired,\n    meta: PropTypes.object.isRequired,\n};\n\nexport const query = graphql`\n    {\n        prismic {\n            allHomepages {\n                edges {\n                    node {\n                        hero_title\n                        hero_button_text\n                        hero_button_link {\n                            ... on PRISMIC__ExternalLink {\n                                _linkType\n                                url\n                            }\n                        }\n                        content\n                        about_title\n                        about_bio\n                        about_links {\n                            about_link\n                        }\n                    }\n                }\n            }\n            allProjects {\n                edges {\n                    node {\n                        project_title\n                        project_preview_description\n                        project_preview_thumbnail\n                        project_category\n                        project_post_date\n                        secondary_color\n                        primary_color\n                        _meta {\n                            uid\n                        }\n                    }\n                }\n            }\n        }\n        site {\n            siteMetadata {\n                title\n                description\n                author\n            }\n        }\n    }\n`\n","import React, { Component } from 'react';\nimport styled from \"@emotion/styled\";\nimport colors from \"styles/colors\";\nimport dimensions from \"styles/dimensions\";\n\nconst ButtonContainer = styled(\"button\")`\n    padding: 1em 2em;\n    background: ${colors.button};\n    font-weight: 600;\n    color: white;\n    outline: none;\n    border: none;\n    font-size: 1rem;\n    border-radius: 2px;\n    position: relative;\n    transition: background 100ms ease-in-out;\n\n    @media(max-width:${dimensions.maxwidthMobile}px) {\n        padding: 0.8em 1.8em;\n        font-size: 1em;\n    }\n\n    p {\n        margin: 0;\n    }\n\n    &:before {\n        content: \"\";\n        position: absolute;\n        left: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        background: linear-gradient(135deg, #721F80 0%, #223257 100%);\n        z-index: -1;\n    }\n\n    &:hover {\n        cursor: pointer;\n        background: transparent;\n        transition: background 100ms ease-in-out;\n    }\n\n    &.Button--secondary {\n        background: ${colors.blue200};\n        color: ${colors.blue600};\n        padding: 0.95em 1.8em;\n        font-size: 0.95rem;\n\n        &:hover {\n            background: ${colors.blue300};\n            transition: background 100ms ease-in-out;\n        }\n    }\n`\n\nclass Button extends Component {\n    render() {\n        const { children, ...props } = this.props;\n        return (\n            <ButtonContainer\n                onClick={this.props.onClick}\n                {...props}>\n                {this.props.children}\n            </ButtonContainer>\n        );\n    }\n}\n\nexport default Button;\n"],"sourceRoot":""}